[tool.poetry]
name = "aggregator-library"
version = "0.1.0"
description = "Aggregate information for all resources in AWS account"
authors = ["Ely Deckers <e.deckers@gmail.com>"]
include = ["LICENSE"]
license = "MPL-2.0"
readme = "README.md"

[[tool.poetry.packages]]
include = "aws_meta_aggregator"

[tool.poetry.dependencies]
boto3 = "^1.34.79"
python = "~3.12"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

#########################################################################################
# Testing
#########################################################################################

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
markers = ["isolated", "e2e"]


[tool.coverage]
omit = "**/tests/**"

[tool.coverage.report]
show_missing = true
fail_under = 0      # FIXME ED "You've got to pump those numbers up. Those are rookie numbers!"

[tool.coverage.html]
directory = ".reports/coverage/html"

[tool.coverage.xml]
output = ".reports/coverage/coverage.xml"


#########################################################################################
# Style checking
#########################################################################################

[tool.bandit]
assert_used = { skips = ["**/test_*.py"] }

[tool.black]
target-version = ["py312"]

[tool.isort]
profile = "black"

[tool.pylint.BASIC]
good-names = "log"

[tool.pylint.MASTER]
disable = [
    "C0114", # missing-module-docstring
    "C0115", # missing-class-docstring
    "C0116", # missing-function-docstring
    "E0401", # import-error
    "R0801", # duplicate-code
    "W0511", # fixme
]

[tool.pylint.pre-commit-hook]
limit = 10

[tool.mypy]
strict = true
ignore_missing_imports = true
